AWSTemplateFormatVersion: "2010-09-09"
Description: "S3 + CloudFront for Habit Tracker frontend with HTTPS"

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - prod
    Description: Environment name (dev or prod)

Resources:
  # S3 Bucket for static website (now PRIVATE - accessed via CloudFront only)
  FrontendBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "habit-tracker-${Environment}-${AWS::AccountId}"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: Project
          Value: HabitTrackerAWS
        - Key: Environment
          Value: !Ref Environment
        - Key: ManagedBy
          Value: CloudFormation

  # CloudFront Origin Access Identity (OAI)
  # Allows CloudFront to access private S3 bucket
  CloudFrontOAI:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Sub "OAI for habit-tracker-${Environment}"

  # Bucket Policy - Allow CloudFront OAI to read from S3
  FrontendBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref FrontendBucket
      PolicyDocument:
        Statement:
          - Sid: AllowCloudFrontOAI
            Effect: Allow
            Principal:
              CanonicalUser: !GetAtt CloudFrontOAI.S3CanonicalUserId
            Action: "s3:GetObject"
            Resource: !Sub "${FrontendBucket.Arn}/*"

  # CloudFront Distribution
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: true
        Comment: !Sub "Habit Tracker ${Environment} Frontend"
        DefaultRootObject: index.html
        HttpVersion: http2
        PriceClass: PriceClass_100 # Use only North America & Europe (cheaper)

        # Origin: S3 Bucket
        Origins:
          - Id: S3Origin
            DomainName: !GetAtt FrontendBucket.RegionalDomainName
            S3OriginConfig:
              OriginAccessIdentity: !Sub "origin-access-identity/cloudfront/${CloudFrontOAI}"

        # Default Cache Behavior
        DefaultCacheBehavior:
          TargetOriginId: S3Origin
          ViewerProtocolPolicy: redirect-to-https # Force HTTPS
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          CachedMethods:
            - GET
            - HEAD
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
          Compress: true # Enable gzip compression
          DefaultTTL: 86400 # 24 hours
          MinTTL: 0
          MaxTTL: 31536000 # 1 year

        # Custom Error Responses (FIX for React Router!)
        # Redirect 404/403 to index.html for single-page app routing
        CustomErrorResponses:
          - ErrorCode: 403
            ResponseCode: 200
            ResponsePagePath: /index.html
            ErrorCachingMinTTL: 300
          - ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: /index.html
            ErrorCachingMinTTL: 300

        # Viewer Certificate (uses default CloudFront certificate)
        ViewerCertificate:
          CloudFrontDefaultCertificate: true

      Tags:
        - Key: Project
          Value: HabitTrackerAWS
        - Key: Environment
          Value: !Ref Environment

Outputs:
  BucketName:
    Description: Name of the S3 bucket
    Value: !Ref FrontendBucket
    Export:
      Name: !Sub "${AWS::StackName}-BucketName"

  CloudFrontURL:
    Description: CloudFront distribution URL (HTTPS)
    Value: !Sub "https://${CloudFrontDistribution.DomainName}"
    Export:
      Name: !Sub "${AWS::StackName}-CloudFrontURL"

  CloudFrontDistributionId:
    Description: CloudFront distribution ID (for cache invalidation)
    Value: !Ref CloudFrontDistribution
    Export:
      Name: !Sub "${AWS::StackName}-DistributionId"

  BucketArn:
    Description: ARN of the S3 bucket
    Value: !GetAtt FrontendBucket.Arn
    Export:
      Name: !Sub "${AWS::StackName}-BucketArn"
# Validate:
# aws cloudformation validate-template --template-body file://infrastructure/cloudformation/01-s3-static-website.yaml
# Create stack:
# aws cloudformation create-stack --stack-name habit-tracker-frontend-dev --template-body file://infrastructure/cloudformation/01-s3-static-website.yaml --parameters ParameterKey=Environment,ParameterValue=dev

